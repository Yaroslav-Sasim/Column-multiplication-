#include <iostream>

using namespace std;


int num_1, num_2;
char _num_1 = -1, _num_2 = -1; //чтобы сохранить знаки введеных чисел и не засорять ими промежуточный вывод
unsigned char num_2_array[] = { 0,0,0,0,0,0,0,0,0,0 }; //будет использоваться для парсинга числа b на отдельные разряды. 
int tmp_array[] = { 0,0,0,0,0,0,0,0,0,0 }; 


int ten(int value) 
{
    int tmp = 1; //так как будем получать степень 10, т.е. 10^0=1, 10^1=10 и т.д., то сразу определим крайнее значение при возведении в нулевую степень.

    while (value != 0) {
        tmp = tmp * 10; //умножаем на 10 пока не кончится число степени
        value--;
    }
    return tmp;
}

// вывод в столбцах 
int lengthint(int value)
{
    int tmp = 0;
    if (value == 0) {
        tmp = 1;
    }; //если число 0, то его длина тоже 1 и это крайний случай, который не подходит под дальнейший алгоритм

    while (value != 0){//если же изначально число не нуль, то делим его на 10 и считаем число разрядов
    
        value = value / 10;
        tmp++;
    }
    return tmp; 
}

void readnum(void) { 

    cout << ("Введите значение a="); 
    cin>> num_1; 
    cout << ("Введите значение b="); 
    cin>>num_2; 

    //далее вывод двух чисел с учетом их длины и знака
    for (int i = 0; i < 20 - lengthint(num_1); i++) {
        cout << (" ");
    }; //нам необходимо отступить слева определенное количество пробелов, чтобы сделать грамотный столбик. Мы отступаем 20-(длина первого числа)
    if (num_1 >= 0) {//если число положительное
        cout<<(" "); //место под знак не нужно и мы заполняем его еще одним пробелом
        _num_1 = _num_1 * -1; //у нас были переменные для сохранения информации для знака
    }
    cout<< num_1<<endl; //выводим число а вместе со знаком

    for (int i = 0; i < 20 - lengthint(num_2); i++) { //второе число
        cout << (" ");
    }; 
    if (num_2 >= 0) {
        cout << (" ");
        _num_2 = _num_2 * -1;
    }
    cout<< num_2<<endl;

    num_1 = abs(num_1); //так как мы будем промежуточный результат выводить без учета знака, то возьмем модули чисел. Заранее сохранив знаки в переменных _num_1 и _num_2
    num_2 = abs(num_2);

    cout<<"  -------------------"<<endl; 
}

//функция парсинга числа num_2 по разрядам в массив.
void parsenum(int temp_num_2){ //парсим значения поразрядно только для второго числа
    int num = 0; //счетчик
    while (temp_num_2 != 0){ //пока число не закончилось во время его разбиения
        num_2_array[num] = temp_num_2 % 10; //сохраняем младший разряд
        temp_num_2 = temp_num_2 / 10; //удаляем его из числа num_2, деля на 10 целочисленно
        num++;
    }
}

//функция рассчета и всей производящейся математики
void math(void){

    int tmp = 0; //переменная для хранения результата выполнения операций

    for (int i = 0; i < lengthint(num_2); i++){ //цикл расчета и вывода промежуочных результатов, пробегая по всей длине числа num_2
        tmp_array[i] = (int)(num_1)*num_2_array[i]; //мы умножаем первое число последовательно на каждый разряд числа второго. 
        for (int j = 0; j < 21 - lengthint(tmp_array[i]) - i; j++) {
            cout << " ";
        }; // Здесь нет проверки наличия знака, т.к. мы работаем с НЕотрицательными числами. Начальное значение сдвига строки 21, а не 20. Далее из него вычитаем длину выводимого числа , а потом еще вычитаем разряд числа num_2, т.к. при умножении столбиком каждое следующее действие сдвигается на один разряд влево 
        cout<< tmp_array[i] << endl; //выводим промежуточное число.
    }

    cout << ("  -------------------")<<endl;

    for (int i = 0; i < lengthint(num_2); i++){ //промежуточные значения
        tmp = tmp + (int)(tmp_array[i]) * ten(i); //в tmp будем складывать все значения.
    }

    for (int i = 0; i < 20 - lengthint(tmp); i++) {
        cout << (" ");
    }; 
    tmp = tmp * _num_1 * _num_2; //нужно вспомнить знак результата. Для этого нужно перемножить знаки исходных множителей, для чего их и сохраняли
    if (tmp >= 0){ // нужно ли оставить место под знак "-" при выводе числа
        cout<<(" "); //если не нужно, то заполняем пробелом
    }
    cout<<tmp<<endl;//выводим результат
}

int main()
{
    setlocale(LC_ALL,"ru");
    readnum(); //вызываем функцию чтения с клавиатуры чисел и их вывода

    parsenum(num_2); //вызов функции парсинга второго числа 

    math(); //вся обработка и вывод промежуточных результатов и итога

    return 0;
}